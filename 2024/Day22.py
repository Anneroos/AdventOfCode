import math
with open("input22.txt") as f:
    initial_numbers = [int(i) for i in f.read().split("\n")]

def generate_next_secret_number(n):
    secret = (n*64 ^ n) % 16777216
    secret = (math.floor(secret/32) ^ secret) % 16777216
    secret = (secret * 2048 ^secret ) % 16777216
    return secret

def generate_next_2000(n):
    secrets = [0 for _ in range(2001)]
    secrets[0] = n
    for i in range(1, 2001):
        secrets[i] = generate_next_secret_number(secrets[i-1])
    return secrets

totalSecret2000 = 0 # Part 1
sequencesTotal = {} # Part 2
for nr in initial_numbers:
    # Part 1
    secrets = generate_next_2000(nr)
    totalSecret2000 += secrets[-1]
    # Part 2
    prices = [int(str(n)[-1]) for n in secrets] # last digits
    diffs = [prices[i]-prices[i-1] for i in range(1,2001)] # differences between two prices
    sequencesLocal = {} # for every monkey, compute which sequences of 4 differences gives which prices (by going back to front)
    for k in range(1997,3,-1):
        sequencesLocal[tuple(diffs[k-3:k+1])] = prices[k+1]
    # Add this to the total
    for k in sequencesLocal:
        sequencesTotal[k] = sequencesTotal.get(k, 0) + sequencesLocal[k]

print(f"Day 22:\n  1) The sum of the 2000th secret number generated by each buyer is {totalSecret2000}.")
print(f"  2) The best sequence to tell the monkey, will result in {max(sequencesTotal.values())} bananas.")
